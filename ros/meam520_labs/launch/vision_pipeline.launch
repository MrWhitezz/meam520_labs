<?xml version="1.0"?>
<launch>

  <arg name="rvizconfig" default="$(find meam520_labs)/config/block_detections.rviz" />
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rvizconfig)" required="true" />

  <!-- <node pkg="tf" type="static_transform_publisher" name="world_to_camera"
    args=".5 0 0 0 0  0  /tag0_0 /base 1"/>

  <node pkg="meam520_labs" name="tf_tag_visualizer" type="detections.py" output="log" /> -->

  <!-- ################################ -->
  <!-- # START LAUNCH FILE FOR CAMERA # -->
  <!-- ################################ -->

  	<arg name="camera_name" default="camera" />
  	<arg name="video_stream_provider" default="0" />
    <arg name="visualize" default="false"/>
    <arg name="camera_number"/>

   	<!-- images will be published at /camera_name/image with the image transports plugins (e.g.: compressed) installed -->
   	<group ns="$(arg camera_name)">
		<node pkg="video_stream_opencv" type="video_stream" name="$(arg camera_name)_stream" output="screen">
	    	<remap from="camera" to="image_raw" />
	    	<param name="camera_name" type="string" value="camera" />
        <param name="video_stream_provider" type="string" value="$(arg video_stream_provider)" />
        <param name="set_camera_fps" type="double" value="30" />
        <param name="buffer_queue_size" type="int" value="1" />
        <param name="fps" type="double" value="30" />
        <param name="frame_id" type="string" value="camera" />
        <param name="camera_info_url" type="string" value="file://$(find meam520_labs)/config/calibration_camera$(arg camera_number).yaml" />
        <param name="flip_horizontal" type="bool" value="false" />
        <param name="flip_vertical" type="bool" value="false" />
        <param name="loop_videofile" type="bool" value="false" />
        <param name="start_frame" type="int" value="0" />
        <param name="stop_frame" type="int" value="-1" />
        <param name="width" type="int" value="0" />
        <param name="height" type="int" value="0" />
	    </node>

	    <node if="$(arg visualize)" name="$(arg camera_name)_image_view" pkg="image_view" type="image_view">
	    	<remap from="image" to="image_raw" />
	    </node>
	</group>

	<node pkg="video_stream_opencv" type="remap_camera_info.py" name="remap_camera_info" output="screen" />

  <!-- ############################## -->
  <!-- # END LAUNCH FILE FOR CAMERA # -->
  <!-- ############################## -->


  <!-- ################################## -->
  <!-- # START LAUNCH FILE FOR APRILTAG # -->
  <!-- ################################## -->

  <arg name="launch_prefix" default="" /> <!-- set to value="gdbserver localhost:10000" for remote debugging -->
  <arg name="node_namespace" default="apriltag_ros_continuous_node" />
  <arg name="image_topic" default="image_raw" />

  <!-- Set parameters -->
  <rosparam command="load" file="$(find meam520_labs)/config/settings.yaml" ns="$(arg node_namespace)" />
  <rosparam command="load" file="$(find meam520_labs)/config/tags.yaml" ns="$(arg node_namespace)" />
  
  <node pkg="apriltag_ros" type="apriltag_ros_continuous_node" name="$(arg node_namespace)" clear_params="true" output="screen" launch-prefix="$(arg launch_prefix)" >
    <!-- Remap topics from those used in code to those on the ROS network -->
    <remap from="image_rect" to="$(arg camera_name)/$(arg image_topic)" />
    <remap from="camera_info" to="$(arg camera_name)/camera_info" />

    <param name="publish_tag_detections_image" type="bool" value="true" />
  </node>

  <!-- ################################ -->
  <!-- # END LAUNCH FILE FOR APRILTAG # -->
  <!-- ################################ -->

  <node pkg="meam520_labs" type="getBlockPose.py" name="getBlockPose" output="screen" />






</launch>
